/// Universidad del Valle de Guatemala
// IE2023 Programaci√≥n de Microcontroladores
// main.c
// Proyecto: Lab6
// Hardware: ATMEGA328P
// Created: 2/14/2024
// Author : Fatima Urrutia
//********************************************************************************************************************************************

//********************************************************************************************************************************************
// Librerias
//********************************************************************************************************************************************

#define F_CPU 16000000
#include <avr/io.h>
#include <avr/interrupt.h>
#include <util/delay.h>
#include "ADC/ADC.h"

//********************************************************************************************************************************************
// Variables Globales
//********************************************************************************************************************************************

void initUART9600(void);
void writeUART(char caracter);
void textUART(char* texto);

volatile char recibido;
volatile char primero;
volatile char segundo;
volatile char POT;

//********************************************************************************************************************************************
// Main
//********************************************************************************************************************************************

int main(void)
{
	cli();
	DDRB = 0xFF;
	DDRC = 0xFF;
	PORTC = 0;
	PORTB = 0;
	
	initUART9600();
	setADC(externo, izquierda, 7);
	controlADC(1, 0, 1, 128);
	sei();
	
	textUART("Queres leer el potenciometro o el ASCII? \n11)Potenciometro \n22)ASCII");
	
	while (1) {
		ADCSRA |= (1 << ADSC);
		_delay_ms(10);
		
		if (UDR0 == 49) {
			PORTB = POT;
			} 
		else{
			PORTB = 0; 
			PORTC = 0; 
			
			_delay_ms(4);
			
			PORTB = primero;
			PORTC = segundo;
			}
		}
}

//********************************************************************************************************************************************
// Funciones
//********************************************************************************************************************************************

void textUART(char* texto){
	uint8_t i;
	
	for(i = 0; texto[i] != '\0'; i++){
		while(!(UCSR0A & (1 << UDRE0)));
		UDR0 = texto[i];
	}
}

void writeUART(char caracter){
	while(!(UCSR0A & (1 << UDRE0)));
	UDR0 = caracter;
}


void initUART9600(void){
	DDRD |= (1 << DDD1);
	DDRD &= (1 << DDD0);
	
	UCSR0A = 0;
	UCSR0A |= (1 << U2X0);
	
	UCSR0B = 0;
	UCSR0B |= (1 << RXCIE0) | (1 << RXEN0) | (1 << TXEN0);
	
	UCSR0C = 0;
	UCSR0C |= (1 << UCSZ01) | (1 << UCSZ00);
	
	UBRR0 = 207;
}

//********************************************************************************************************************************************
// Interrupciones
//********************************************************************************************************************************************

ISR(USART_RX_vect){
	recibido = UDR0;
	
	primero = (recibido & 0x3F);
	segundo = (recibido & 0xc0)>>6;
}


ISR(ADC_vect){
	
	POT = ADCH;
	ADCSRA |= (1 << ADIF);
	
}
